title "创建模块"
brief `
ContextOS 云操作系统，自带完整的开发环境。
所以当组织架构搭建好之后，就可以在任意节点的任意项目中，直接现场开发，创建出新的功能模块。
`

chapter "后端开发"
spark `ContextOS 后端使用 Golang 开发，并且自带后端冰山架，所以直接添加模块文件即可。`

section "创建模块"
spark `如下图所示，使用软件工具「vimer(编辑器)」创建新的功能模块。
其中名称与分类，需要自行输入，这将决定生成模块的文件与目录。
每个参数的意义如下所示。`
order `
名称，模块的名称及文件的名称。
帮助，模块的中文名称。
类型，模块的基类。
程序，主程序入口。
分类，模块的分类及目录的名称。
顶域，模块的名称前缀。
`
image material vimer-module.png

section "编译预览"
spark `如下图所示，模块创建之后，会自动打开源码文件，就可以直接进行编程与预览了。
在上部的工具栏中，有保存、编译、预览三个按键。
点击编译后，系统会编译源码并自动重启进程。
重启成功后，点击预览，就可以在右边框预览区中，查看模块的界面。
`
image material vimer-preview.png
spark `ContextOS 自带后端框架，所有的功能都是模块化开发。
如上图所示，在 init 函数中，通过 ice.Cmd 注册模块，指定模块名与结构体，
ContextOS 会自动反射结构体，将相关方法注册为模块接口，并根据字段标签来定义接口的参数、中文、图标、样式等。
`
spark `ContextOS 通过匿名嵌套的方式，来继承基类的接口。
ice.Hash 实现了一种内存版的数据库，并提供了 CURD 的接口。
所以，新开发的功能模块，不需重复编写 CURD 的接口，直接编写业务代码即可。
其中 List() 接口，用来查询数据，展示界面。
`
spark `ContextOS 自带前端框架，所以前端网页也是模块化开发。
每个模块都提供了标准的界面与交互，如有其它需求，可以再添加前端代码进行定制扩展。
`

section "模块界面"
spark `如上图所示，标准的模块界面，有工具栏、工作区、状态栏。`
spark `工具栏分三部分`
order `
左边的标题，显示模块的名称与图标，点击可以打开菜单，查看更多的操作。
中间的数据操作栏，有关闭、刷新、返回、参数、创建等。
右边的界面操作栏，有二维码、全屏、打开等操作。
`
spark `工具区，每个模块自行定义输出内容，默认会显示通用表格。`
spark `状态栏，显示一些状态信息，如响应时间、数据数量、请求耗时等。`


section "添加接口"
spark `如下图所示，给模块添加接口，编写完代码后，依次保存、编译、预览即可。`
image material vimer-func.png
spark `这里新加的接口为 show，参数有 name。
点击工具栏中展示按键，即可打开交互的对话框，输入参数，再点击展示，即可调用新接口展示输出的文本。
`
spark `
不管是接口的名称，还是参数的名称，都可以展示成中文或图标，在代码文件或配置文件中添加即可。
在代码中，通过结构体的字段标签，来指定接口的参数、中文、图标、样式、权限等。
一些通用的名称，ContextOS 会自动翻译成中文或转换成图标进行展示。
`
spark `
在 List() 接口中，通过 m.Action() 方法来设置工具栏按键，如这里的 Create 创建、Show 展示。
`
spark `
在新添加的 Show() 接口中，通过 m.Option() 方法来获取参数，通过 m.Echo() 方法，来输出文本内容到模块界面。
`

chapter "前端开发"
spark `ContextOS 前端使用 JS+CSS 开发，并且自带前端冰山架，所以直接添加模块文件即可。`

section "添加脚本文件"
spark `如下图所示，选中文件 hi.go，点击菜单，点击添加文件，打开对话框，输入文件名，点击添加文件即可。`
image material vimer-script.png

spark `如下图所示，文件添加之后，会自动打开源码文件，就可以直接编程与预览了。`
image material vimer-display.png
spark `ContextOS 的前端脚本，通过 Volcanos() 函数来注册模块。
ContextOS 加载完成模块后，会自动调用 _init() 函数来初始化界面。
其中参数 can 代表当前模块，参数 msg 代表当前请求，用来存放获得的数据。
msg.Echo() 函数，用来添加文本数据，并返回 msg，以便后续链式调用。
msg.Dump() 函数，用来将数据显示到界面上。
`

section "添加样式文件"
spark `同添加脚本文件一样，添加 hi/hi.css 文件。`
spark `如下图所示，文件添加之后，会自动打开源码文件，就可以直接编程与预览了。`
image material vimer-style.png
spark `如上图所示，添加 color 属性，改变字体颜色。
其中 $output 系统会自动替换成 fieldset.web.chat.hi.hi>div.output。
`

chapter "界面定制"
spark `ContextOS 提供了配置文件，可以用来定制界面上的中文与图标。`
section "添加配置文件"
