title "contexts"
premenu

chapter "体验项目"
contexts已经生成了docker的镜像，并上传到了docker.io，可以直接下载启动服务
spark shell `
$ docker run -it -p 9020:9020 shylinux/contexts
`

spark `
服务启动后，就可以通过浏览器访问本服务
`
refer `
打开浏览器 http://localhost:9020
`
spark `
登录的账号: root 密码: root
`

chapter "创建项目"
spark `
如果docker镜像版，功能无法满足需求，可以自己创建项目，进行完全定制
为了方便安装，推荐使用docker创建开发环境
`
spark shell `
$ docker run -dt -p 9020:9020 centos
`

spark `
进入容器后，安装需要的工具
`
spark shell `
$ yum install -y git make
`

section "下载脚本"
spark `
为了方便创建项目和模块，intshell封装了相关的脚本，下载intshell后，source脚本miss.sh，即可
`

spark shell `
$ git clone https://github.com/shylinux/intshell ~/.ish
$ source ~/.ish/miss.sh
`
spark `
推荐，将miss.sh，加到bashrc中，方便以后使用
`

section "创建项目"
spark shell `
$ ish_miss_create demo
$ make
`

section "启动服务"
spark shell `
$ ish_miss_serve
`

spark `
服务启动后，就可以通过浏览器访问本服务
`
refer `
打开浏览器 http://localhost:9020
`
spark `
登录的账号: root 密码: root
`

chapter "创建模块"
spark `
打开一个新的终端，确定工具脚本已经加载到终端，如果没有加入bashrc中，可以手动加载一下
`

section "创建模块"
spark shell `
$ ish_miss_module hello
`

section "引用模块"
在src/main.go中加入新建模块
spark shell `
import (
        ...
        _  "20200730-demo/src/hello"
        ...
       )
`

section "编译重启"
spark shell `
$ make
`

chapter "产品应用"

brief `
2020年目标，功能上线 task.hub.com.cn，
应用目标实现对源码、文档、群聊、时间、金钱的高效管理
`

section "code"
field "阅读器" web.code.inner args `[ src/ main.shy ]`
field "编辑器" web.code.vimer args `[ src/ main.go ]`

section "wiki"
field "绘图" web.wiki.draw.draw args `[ src/ main.svg ]`
field "相册" web.wiki.feel args `[ ]`

section "chat"
field "定位" web.chat.location.location args `[ ]`
field "复制" web.chat.paste.paste args `[ ]`
field "资料" web.chat.meet.miss args `[ ]`

section "team"
field "任务" web.team.task args `[ ]`
field "任务" web.team.plan args `[ ]`

section "mall"
field "资产" web.mall.asset args `[ ]`

